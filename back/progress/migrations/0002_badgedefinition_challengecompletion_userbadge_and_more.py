# Generated by Django 5.2.4 on 2025-10-08 10:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('progress', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BadgeDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('program', models.CharField(choices=[('PROIND', 'PROIND'), ('PRODEPE', 'PRODEPE'), ('PRODEAUTO', 'PRODEAUTO')], max_length=10)),
                ('trail_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('difficulty', models.CharField(choices=[('EASY', 'Fácil'), ('MEDIUM', 'Médio'), ('HARD', 'Difícil')], max_length=10)),
                ('badge_type', models.CharField(choices=[('BRONZE', 'Bronze'), ('SILVER', 'Prata'), ('GOLD', 'Ouro')], max_length=10)),
                ('badge_image', models.CharField(default='badges/default.png', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Definição de Badge',
                'verbose_name_plural': 'Definições de Badges',
                'indexes': [models.Index(fields=['program', 'trail_number'], name='progress_ba_program_14f2a7_idx'), models.Index(fields=['difficulty', 'badge_type'], name='progress_ba_difficu_dcfb9b_idx')],
                'unique_together': {('program', 'trail_number', 'difficulty')},
            },
        ),
        migrations.CreateModel(
            name='ChallengeCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(choices=[('PROIND', 'PROIND'), ('PRODEPE', 'PRODEPE'), ('PRODEAUTO', 'PRODEAUTO')], max_length=10)),
                ('trail_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('difficulty', models.CharField(choices=[('EASY', 'Fácil'), ('MEDIUM', 'Médio'), ('HARD', 'Difícil')], max_length=10)),
                ('challenge_id', models.PositiveIntegerField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('attempts', models.PositiveIntegerField(default=1)),
                ('completion_time_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_completions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conclusão de Desafio',
                'verbose_name_plural': 'Conclusões de Desafios',
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('badge_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progress.badgedefinition')),
                ('challenge_completion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='badge_earned', to='progress.challengecompletion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Badge do Usuário',
                'verbose_name_plural': 'Badges dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='UserBadgeStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bronze_badges', models.PositiveIntegerField(default=0)),
                ('silver_badges', models.PositiveIntegerField(default=0)),
                ('gold_badges', models.PositiveIntegerField(default=0)),
                ('total_badges', models.PositiveIntegerField(default=0)),
                ('proind_badges', models.PositiveIntegerField(default=0)),
                ('prodepe_badges', models.PositiveIntegerField(default=0)),
                ('prodeauto_badges', models.PositiveIntegerField(default=0)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('first_badge_earned', models.DateTimeField(blank=True, null=True)),
                ('last_badge_earned', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='badge_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estatísticas de Badges',
                'verbose_name_plural': 'Estatísticas de Badges',
            },
        ),
        migrations.AddIndex(
            model_name='challengecompletion',
            index=models.Index(fields=['user', 'completed_at'], name='progress_ch_user_id_10009b_idx'),
        ),
        migrations.AddIndex(
            model_name='challengecompletion',
            index=models.Index(fields=['program', 'trail_number', 'difficulty'], name='progress_ch_program_e6513b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='challengecompletion',
            unique_together={('user', 'program', 'trail_number', 'difficulty')},
        ),
        migrations.AddIndex(
            model_name='userbadge',
            index=models.Index(fields=['user', 'earned_at'], name='progress_us_user_id_84cd9b_idx'),
        ),
        migrations.AddIndex(
            model_name='userbadge',
            index=models.Index(fields=['badge_definition'], name='progress_us_badge_d_57130d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userbadge',
            unique_together={('user', 'badge_definition')},
        ),
    ]
